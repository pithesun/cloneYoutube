[{"C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\App.js":"2","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"4","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"5","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\Navbar\\Navbar.js":"6","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\Footer\\Footer.js":"7","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"8","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\_reduces\\index.js":"9","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\_actions\\user_actions.js":"10","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\_actions\\types.js":"11","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\_reduces\\user_reducer.js":"12","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\hoc\\auth.js":"13","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\VideoUploadPage\\VideoUploadPage.js":"14","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\Navbar\\Section\\StartHeader.js":"15","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\VideoDetailPage\\VideoDetailPage.js":"16","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\VideoDetailPage\\Section\\SideVideo.js":"17"},{"size":1064,"mtime":1607870894488,"results":"18","hashOfConfig":"19"},{"size":1518,"mtime":1608453575654,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":2330,"mtime":1608519234729,"results":"22","hashOfConfig":"19"},{"size":1954,"mtime":1607935294252,"results":"23","hashOfConfig":"19"},{"size":2183,"mtime":1608383335984,"results":"24","hashOfConfig":"19"},{"size":150,"mtime":1607510513698,"results":"25","hashOfConfig":"19"},{"size":2921,"mtime":1607935400403,"results":"26","hashOfConfig":"19"},{"size":313,"mtime":1607866897593,"results":"27","hashOfConfig":"19"},{"size":1384,"mtime":1607932690915,"results":"28","hashOfConfig":"19"},{"size":129,"mtime":1607929261571,"results":"29","hashOfConfig":"19"},{"size":597,"mtime":1607929460688,"results":"30","hashOfConfig":"19"},{"size":1451,"mtime":1607936221721,"results":"31","hashOfConfig":"19"},{"size":6883,"mtime":1608447599266,"results":"32","hashOfConfig":"19"},{"size":693,"mtime":1608381474946,"results":"33","hashOfConfig":"19"},{"size":2037,"mtime":1608525267616,"results":"34","hashOfConfig":"19"},{"size":1602,"mtime":1608525360589,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"90x3a4",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\index.js",[],["76","77"],"C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\App.js",["78","79"],"import logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport LandingPage from './components/views/LandingPage/LandingPage';\nimport LoginPage from './components/views/LoginPage/LoginPage';\nimport Navbar from './components/views/Navbar/Navbar';\nimport RegisterPage from './components/views/RegisterPage/RegisterPage';\n//import Footer from './components/views/Footer/Footer';\nimport Auth from './hoc/auth';\nimport VideoUploadPage from \"./components/views/VideoUploadPage/VideoUploadPage\";\nimport VideoDetailPage from \"./components/views/VideoDetailPage/VideoDetailPage\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar/>\n      <div>\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch> \n          <Route exact path=\"/\" component= {Auth(LandingPage, null)} />\n          <Route exact path=\"/login\" component= {Auth(LoginPage, false)} />\n          <Route exact path='/register' component= {Auth(RegisterPage, false)} />\n          <Route exact path='/video/upload' component= {Auth(VideoUploadPage, true)} />\n          <Route exact path='/video/:videoId' component= {Auth(VideoDetailPage, true)} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\nexport default App;\n","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\LandingPage\\LandingPage.js",["80"],"C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\LoginPage\\LoginPage.js",[],"C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\Navbar\\Navbar.js",["81"],"import React from 'react';\r\nimport axios from 'axios';\r\n//import { USER_SERVER } from '../../../config';\r\nimport { faVideo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport {useSelector} from 'react-redux';\r\nimport './Section/Navbar.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport StartHeader from './Section/StartHeader'\r\nfunction Navbar(props) {\r\n        //\r\n        const user = useSelector(state => state.user);\r\n        const onLogoutHandler = () => {\r\n            axios.get('/api/users/logout') //body 없이 준다.\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    props.history.push('/login');\r\n                }else{\r\n                    alert('로그아웃 하는데 실패했습니다.');\r\n                }\r\n            })\r\n        }\r\n        if (user.userData && !user.userData.isAuth) {\r\n            return (\r\n                <>\r\n                    <header className=\"sticky\">\r\n                        <StartHeader/>\r\n                        <div className=\"end\">\r\n                            <a href=\"/login\">\r\n                                    sign in\r\n                            </a>\r\n                            <a href=\"/register\">\r\n                                    sign up\r\n                            </a>\r\n                        </div>\r\n                    </header>\r\n                    \r\n                </>\r\n            )\r\n        } else {\r\n            return (\r\n                <>\r\n                    <header>\r\n                        <StartHeader/>\r\n                        <div className=\"end\">\r\n                            <a href=\"/video/upload\">\r\n                            <button>\r\n                                    <FontAwesomeIcon icon= {faVideo} className=\"icon\"\r\n                                    />\r\n                            </button>\r\n                            </a>\r\n                                <a onClick={onLogoutHandler}>Logout</a>\r\n                            </div>\r\n                    </header>\r\n                </>\r\n            )\r\n        }\r\n}\r\n\r\nexport default withRouter(Navbar)\r\n","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\Footer\\Footer.js",[],"C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",[],"C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\_reduces\\index.js",[],"C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\_actions\\user_actions.js",[],"C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\_actions\\types.js",[],"C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\_reduces\\user_reducer.js",["82","83","84","85"],"import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER\r\n} from '../_actions/types'\r\n\r\nexport default function (state = {}, action){\r\n    \r\n    //타입별 처리\r\n    switch (action.type){\r\n        case LOGIN_USER:\r\n            return { ...state, loginSuccess: action.payload }\r\n            break;\r\n        case REGISTER_USER:\r\n            return { ...state, register: action.payload }\r\n            break;\r\n        case AUTH_USER:\r\n            return { ...state, userData: action.payload } //모든 유저 데이터\r\n            break;\r\n        default:\r\n            return state;\r\n    } \r\n}","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\hoc\\auth.js",["86","87"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth } from '../_actions/user_actions';\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n\r\n    /* option */\r\n    //null => 아무나 출입 가능\r\n    //true => 로그인한 유저 출입 가능\r\n    //false => 로그인한 유저 출입 불가능\r\n    function AuthenticationCheck(props){\r\n        \r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //백엔드에서 request를 날려 상태를 가져옴\r\n            dispatch(auth()).then(response => {\r\n                console.log(response)\r\n\r\n                //분기 처리\r\n                if(!response.payload.isAuth){\r\n                    //로그인 하지 않은 상태\r\n                    if(option){\r\n                        props.history.push('/login');\r\n                    }\r\n                }else{\r\n                    //로그인 한 상태\r\n                    if(adminRoute && !response.payload.isAdmin){ //권한 필요한 페이지 접근 시\r\n                        props.history.push('/');\r\n                    }else{\r\n                        if(!option){\r\n                            props.history.push('/');\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent/>\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\VideoUploadPage\\VideoUploadPage.js",["88"],"import React, { useState } from 'react'\r\nimport { Typography, Button, Form, message, Input } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport Dropzone from 'react-dropzone';\r\nimport Axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nconst { TextArea } = Input;\r\nconst { Title } = Typography;\r\n\r\nfunction VideoUploadPage(props) {\r\n    const user = useSelector(state => state.user) //state store에서 가져옴\r\n\r\n    const [VideoTitle, setVideoTitle] = useState(\"\")\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [Private, setPrivate] = useState(0) // 0은 private 1은 public으로\r\n    const [Category, setCategory] = useState(\"Film & Animation\")\r\n\r\n    //동영상과 썸네일 state\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [Duration, setDuration] = useState(\"\")\r\n    const [ThumbnailPath, setThumbnailPath] = useState(\"\")\r\n\r\n    const PrivateOptions = [\r\n        {value: 0, label: \"Private\"},\r\n        {value: 1, label: \"Public\"}\r\n    ]\r\n    const CategoryOptions = [\r\n        {value: 0, label: \"Film & Animation\"},\r\n        {value: 1, label: \"Auto & Vehicles\"},\r\n        {value: 2, label: \"Music\"},\r\n        {value: 3, label: \"Pets & Animals\"},\r\n    ]\r\n    const onTitleChange = (e) => {\r\n        setVideoTitle(e.target.value);\r\n    }\r\n    const onDescriptionChange = (e) => {\r\n        setDescription(e.target.value)\r\n    }\r\n    const onPrivateChange = (e) => {\r\n        setPrivate(e.target.value)\r\n    }\r\n    const onCategoryChange = (e) => {\r\n        setCategory(e.target.value)\r\n    }\r\n    const onDrop = (files) => {\r\n\r\n        let formData = new FormData; //XMLHTTPREQUEST\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data'}\r\n        }\r\n        console.log(files);\r\n        formData.append(\"file\", files[0])\r\n\r\n        Axios.post('/api/video/uploadfiles', formData, config)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                console.log(response.data)\r\n\r\n                //썸네일 drop\r\n                let variable = {\r\n                    url: response.data.filePath,\r\n                    filename: response.data.fileName\r\n                }\r\n                setFilePath(response.data.filePath)\r\n                console.log(\"filepath\", response.data.filePath);\r\n\r\n                Axios.post('/api/video/thumbnails', variable)\r\n                .then(response => {\r\n                    if(response.data.success){\r\n                        setDuration(response.data.fileDuration)\r\n                        console.log(\"thumbsFilepath\", response.data.thumbsFilePath);\r\n                        setThumbnailPath(response.data.thumbsFilePath)\r\n                    }else{\r\n                        alert('썸네일 생성에 실패했습니다.')\r\n                    }\r\n                })\r\n            } else{\r\n                alert('비디오 업로드를 실패했습니다.');\r\n            }\r\n        }) \r\n    }\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault(); // 원래 하려고 했던 것을 방지\r\n        const variable = {\r\n            writer: user.userData._id, //리덕스를 통해 가져옴\r\n            title: VideoTitle,\r\n            description: Description,\r\n            privacy: Private,\r\n            filePath: FilePath,\r\n            category: Category,\r\n            duration: Duration,\r\n            thumbnail: ThumbnailPath,\r\n        }\r\n        Axios.post('/api/video/uploadVideo', variable)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                message.success('성공적으로 업로드를 했습니다.')\r\n                setTimeout(() => {\r\n                    props.history.push('/')\r\n                }, 3000);\r\n                \r\n            } else {\r\n                alert('비디오 업로드에 실패했습니다.')\r\n            }\r\n        })\r\n\r\n    } \r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: \"center\", marginBottom: '2rem'}}>\r\n                <Title level={2}>Upload Video</Title>\r\n            </div>\r\n            <Form onSubmit={onSubmit}>\r\n                <div style= {{ display: \"flex\", justifyContent: 'space-between'}}>\r\n                        <Dropzone\r\n                            onDrop={onDrop}\r\n                            multiple={false}\r\n                            maxSize={100000000}>\r\n                                {({getRootProps, getInputProps}) => (\r\n                                    <div style={{ width: '300px', height: '240px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center'}} {...getRootProps()}\r\n                                    >\r\n                                        <input {...getInputProps()} />\r\n                                        <PlusOutlined style= {{ fontSize: '3rem'}} />\r\n                                    </div>\r\n                                    ) \r\n                                }\r\n                        </Dropzone>\r\n                        {/* Thumbnail  조건부 렌더링*/}\r\n                        {\r\n                            ThumbnailPath &&\r\n                            <div>\r\n                                <img src={`http://localhost:5000/${ThumbnailPath}`} alt=\"thumbnail\" />\r\n                                {/* 서버 포트랑 연결 */}\r\n                            </div>\r\n                        }\r\n                        \r\n                        \r\n                </div>\r\n                <br />\r\n                <br />\r\n                <label>Title</label>\r\n                <Input \r\n                    onChange={onTitleChange}\r\n                    value= {VideoTitle}\r\n                />\r\n                <br />\r\n                <br />\r\n                <label>Description</label>\r\n                <TextArea\r\n                    onChange={onDescriptionChange}\r\n                    value= {Description}\r\n                />\r\n                <br />\r\n                <br />\r\n                <select onChange={onPrivateChange}>\r\n                    {\r\n                        PrivateOptions.map((v,i) => (\r\n                            <option key={v.value} value={v.value}>{v.label}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n                <select onChange={onCategoryChange}>\r\n                    {\r\n                        CategoryOptions.map((v,i) => (\r\n                            <option key={v.value} value={v.value}>{v.label}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    Submit\r\n                </Button>\r\n\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(VideoUploadPage)\r\n","C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\Navbar\\Section\\StartHeader.js",[],"C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\VideoDetailPage\\VideoDetailPage.js",["89"],"C:\\Users\\user\\Desktop\\frontend\\boiler-plate\\client\\src\\components\\views\\VideoDetailPage\\Section\\SideVideo.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":8,"nodeType":"96","messageId":"97","endLine":1,"endColumn":12},{"ruleId":"94","severity":1,"message":"98","line":7,"column":3,"nodeType":"96","messageId":"97","endLine":7,"endColumn":7},{"ruleId":"99","severity":1,"message":"100","line":35,"column":25,"nodeType":"101","endLine":35,"endColumn":107},{"ruleId":"102","severity":1,"message":"103","line":52,"column":33,"nodeType":"101","endLine":52,"endColumn":62},{"ruleId":"104","severity":1,"message":"105","line":7,"column":1,"nodeType":"106","endLine":23,"endColumn":2},{"ruleId":"107","severity":1,"message":"108","line":13,"column":13,"nodeType":"109","messageId":"110","endLine":13,"endColumn":19},{"ruleId":"107","severity":1,"message":"108","line":16,"column":13,"nodeType":"109","messageId":"110","endLine":16,"endColumn":19},{"ruleId":"107","severity":1,"message":"108","line":19,"column":13,"nodeType":"109","messageId":"110","endLine":19,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":5,"column":1,"nodeType":"106","endLine":44,"endColumn":2},{"ruleId":"111","severity":1,"message":"112","line":37,"column":12,"nodeType":"113","endLine":37,"endColumn":14,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":50,"column":24,"nodeType":"117","messageId":"118","endLine":50,"endColumn":36,"fix":"119"},{"ruleId":"111","severity":1,"message":"120","line":24,"column":8,"nodeType":"113","endLine":24,"endColumn":10,"suggestions":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["124"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"125","text":"126"},"React Hook useEffect has a missing dependency: 'variable'. Either include it or remove the dependency array.",["127"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},[1662,1662],"()",{"desc":"130","fix":"131"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"132","text":"133"},"Update the dependencies array to be: [variable]",{"range":"134","text":"135"},[1197,1199],"[dispatch, props.history]",[818,820],"[variable]"]